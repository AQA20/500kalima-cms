name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  install_dependencies:
    runs-on: self-hosted
    outputs:
      node_modules: ${{ steps.cache_node_modules.outputs.cache-hit }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        id: cache_node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-admin-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-admin-

      - name: Install npm dependencies
        run: |
          npm ci --legacy-peer-deps

  tests:
    runs-on: self-hosted
    needs: install_dependencies
    steps:
      - name: Run Linting
        run: |
          npm run lint

      - name: Run Unit Tests
        run: |
          npm run test

  build:
    runs-on: self-hosted
    needs: tests # Ensure tests pass before building
    steps:
      - name: Build Admin Application
        run: |
          npm run build  # Build the admin application
          pm2 restart "admin" || pm2 start npm --name "admin" -- start
          pm2 save
        env:
          NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_WEB_URL: ${{ secrets.NEXT_PUBLIC_WEB_URL }}
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}

  deploy:
    runs-on: self-hosted
    needs: build # Ensure the app is built before deploying
    steps:
      - name: Deploy Admin Build and Restart Services
        run: |
          # Build the admin application in a temporary directory to minimize downtime
          sudo mkdir -p /var/www/admin_temp
          sudo cp -r ~/actions-runner-admin/_work/500kalima-cms/500kalima-cms/.next /var/www/admin_temp/
          sudo rm -rf /var/www/admin/.next
          # Replace the old version with the new version
          sudo mv /var/www/admin_temp/.next /var/www/admin/.next
          # Remove temp directory
          sudo rm -rf /var/www/admin_temp
          sudo systemctl reload nginx
          sudo systemctl restart nginx
